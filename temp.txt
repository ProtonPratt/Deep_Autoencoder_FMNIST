Using device: cuda
model number {'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD'}
Epoch 1/5, Training Loss: 1.260920075141839
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 2/5, Training Loss: 1.1243164687592366
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 3/5, Training Loss: 1.0973070862934675
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 4/5, Training Loss: 1.0518735591227633
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 5/5, Training Loss: 0.9450482152742783
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
model number {'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [1.260920075141839, 1.1243164687592366, 1.0973070862934675, 1.0518735591227633, 0.9450482152742783], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.5526362823949955, 0.6329057915228292], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3827669985969955, 0.6878948998303075], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  784,   16]]), array([[   0,    0,  100,    0],
       [   0,    0,  467,   33],
       [   0,    0, 1600,    0],
       [   0,    0,   90,  710]])], 'mae': [], 'mse': [], 'r2': []}}]
model number {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam'}
Epoch 1/5, Training Loss: 0.2647675488427296
Epoch 2/5, Training Loss: 0.03855851659099018
Epoch 3/5, Training Loss: 0.013737305390082851
Epoch 4/5, Training Loss: 0.28994978916566716
Epoch 5/5, Training Loss: 0.039914158245820834
model number {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [1.260920075141839, 1.1243164687592366, 1.0973070862934675, 1.0518735591227633, 0.9450482152742783], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.5526362823949955, 0.6329057915228292], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3827669985969955, 0.6878948998303075], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  784,   16]]), array([[   0,    0,  100,    0],
       [   0,    0,  467,   33],
       [   0,    0, 1600,    0],
       [   0,    0,   90,  710]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam', 'train_losses': [0.2647675488427296, 0.03855851659099018, 0.013737305390082851, 0.28994978916566716, 0.039914158245820834], 'val_metrics': {'accuracy': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'precision': [0.989087295651967, 0.9917948717948718, 0.9983385254413291, 0.999666874869873, 0.9986692034936159], 'recall': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'f1_score': [0.9889923861804638, 0.9916553154019455, 0.998332021055137, 0.9996666145019174, 0.9986656306340156], 'confusion_matrix': [array([[ 100,    0,    0,    0],
       [   0,  486,   11,    3],
       [   0,    3, 1582,   15],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  487,   13,    0],
       [   0,    0, 1600,    0],
       [   0,    0,   12,  788]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    5,  795]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    1,    3,  796]])], 'mae': [], 'mse': [], 'r2': []}}]
model number {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop'}
Epoch 1/5, Training Loss: 885981.4918573401
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 2/5, Training Loss: 1.1449906331330992
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 3/5, Training Loss: 1.1449039598104311
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 4/5, Training Loss: 1.1450834251599868
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 5/5, Training Loss: 1.1448121217604217
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
model number {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [1.260920075141839, 1.1243164687592366, 1.0973070862934675, 1.0518735591227633, 0.9450482152742783], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.5526362823949955, 0.6329057915228292], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3827669985969955, 0.6878948998303075], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  784,   16]]), array([[   0,    0,  100,    0],
       [   0,    0,  467,   33],
       [   0,    0, 1600,    0],
       [   0,    0,   90,  710]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam', 'train_losses': [0.2647675488427296, 0.03855851659099018, 0.013737305390082851, 0.28994978916566716, 0.039914158245820834], 'val_metrics': {'accuracy': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'precision': [0.989087295651967, 0.9917948717948718, 0.9983385254413291, 0.999666874869873, 0.9986692034936159], 'recall': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'f1_score': [0.9889923861804638, 0.9916553154019455, 0.998332021055137, 0.9996666145019174, 0.9986656306340156], 'confusion_matrix': [array([[ 100,    0,    0,    0],
       [   0,  486,   11,    3],
       [   0,    3, 1582,   15],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  487,   13,    0],
       [   0,    0, 1600,    0],
       [   0,    0,   12,  788]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    5,  795]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    1,    3,  796]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop', 'train_losses': [885981.4918573401, 1.1449906331330992, 1.1449039598104311, 1.1450834251599868, 1.1448121217604217], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.28444444444444444], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3710144927536232], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]])], 'mae': [], 'mse': [], 'r2': []}}]
model number {'learning_rate': 0.01, 'dropout_rate': 0.0, 'optimizer': 'SGD'}
Epoch 1/5, Training Loss: 0.8006785432926289
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 2/5, Training Loss: 0.19032221345164752
Epoch 3/5, Training Loss: 0.04044499913783659
Epoch 4/5, Training Loss: 0.009220411894939896
Epoch 5/5, Training Loss: 0.003576287777555473
model number {'learning_rate': 0.01, 'dropout_rate': 0.0, 'optimizer': 'SGD'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [1.260920075141839, 1.1243164687592366, 1.0973070862934675, 1.0518735591227633, 0.9450482152742783], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.5526362823949955, 0.6329057915228292], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3827669985969955, 0.6878948998303075], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  784,   16]]), array([[   0,    0,  100,    0],
       [   0,    0,  467,   33],
       [   0,    0, 1600,    0],
       [   0,    0,   90,  710]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam', 'train_losses': [0.2647675488427296, 0.03855851659099018, 0.013737305390082851, 0.28994978916566716, 0.039914158245820834], 'val_metrics': {'accuracy': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'precision': [0.989087295651967, 0.9917948717948718, 0.9983385254413291, 0.999666874869873, 0.9986692034936159], 'recall': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'f1_score': [0.9889923861804638, 0.9916553154019455, 0.998332021055137, 0.9996666145019174, 0.9986656306340156], 'confusion_matrix': [array([[ 100,    0,    0,    0],
       [   0,  486,   11,    3],
       [   0,    3, 1582,   15],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  487,   13,    0],
       [   0,    0, 1600,    0],
       [   0,    0,   12,  788]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    5,  795]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    1,    3,  796]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop', 'train_losses': [885981.4918573401, 1.1449906331330992, 1.1449039598104311, 1.1450834251599868, 1.1448121217604217], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.28444444444444444], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3710144927536232], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.01, 'dropout_rate': 0.0, 'optimizer': 'SGD', 'train_losses': [0.8006785432926289, 0.19032221345164752, 0.04044499913783659, 0.009220411894939896, 0.003576287777555473], 'val_metrics': {'accuracy': [0.903, 0.996, 0.997, 0.999, 0.9993333333333333], 'precision': [0.8692971895698911, 0.9960119284294234, 0.9970349308979459, 0.9990041326230001, 0.999333998669328], 'recall': [0.903, 0.996, 0.997, 0.999, 0.9993333333333333], 'f1_score': [0.8835174081968319, 0.9960035472792642, 0.9970086947102732, 0.9990004533689507, 0.9993333956016881], 'confusion_matrix': [array([[   0,  100,    0,    0],
       [   0,  312,  188,    0],
       [   0,    0, 1600,    0],
       [   0,    1,    2,  797]]), array([[ 100,    0,    0,    0],
       [   0,  497,    3,    0],
       [   0,    6, 1594,    0],
       [   0,    0,    3,  797]]), array([[ 100,    0,    0,    0],
       [   3,  497,    0,    0],
       [   0,    5, 1595,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   1,  499,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    2,  798]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    1, 1599,    0],
       [   0,    0,    1,  799]])], 'mae': [], 'mse': [], 'r2': []}}]
model number {'learning_rate': 0.001, 'dropout_rate': 0.5, 'optimizer': 'Adam'}
Epoch 1/5, Training Loss: 0.11938162871554014
Epoch 2/5, Training Loss: 0.016611227686119348
Epoch 3/5, Training Loss: 0.01610732615074791
Epoch 4/5, Training Loss: 0.011371466028653425
Epoch 5/5, Training Loss: 0.005539167248595427
model number {'learning_rate': 0.001, 'dropout_rate': 0.5, 'optimizer': 'Adam'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [1.260920075141839, 1.1243164687592366, 1.0973070862934675, 1.0518735591227633, 0.9450482152742783], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.5526362823949955, 0.6329057915228292], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3827669985969955, 0.6878948998303075], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  784,   16]]), array([[   0,    0,  100,    0],
       [   0,    0,  467,   33],
       [   0,    0, 1600,    0],
       [   0,    0,   90,  710]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam', 'train_losses': [0.2647675488427296, 0.03855851659099018, 0.013737305390082851, 0.28994978916566716, 0.039914158245820834], 'val_metrics': {'accuracy': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'precision': [0.989087295651967, 0.9917948717948718, 0.9983385254413291, 0.999666874869873, 0.9986692034936159], 'recall': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'f1_score': [0.9889923861804638, 0.9916553154019455, 0.998332021055137, 0.9996666145019174, 0.9986656306340156], 'confusion_matrix': [array([[ 100,    0,    0,    0],
       [   0,  486,   11,    3],
       [   0,    3, 1582,   15],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  487,   13,    0],
       [   0,    0, 1600,    0],
       [   0,    0,   12,  788]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    5,  795]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    1,    3,  796]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop', 'train_losses': [885981.4918573401, 1.1449906331330992, 1.1449039598104311, 1.1450834251599868, 1.1448121217604217], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.28444444444444444], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3710144927536232], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.01, 'dropout_rate': 0.0, 'optimizer': 'SGD', 'train_losses': [0.8006785432926289, 0.19032221345164752, 0.04044499913783659, 0.009220411894939896, 0.003576287777555473], 'val_metrics': {'accuracy': [0.903, 0.996, 0.997, 0.999, 0.9993333333333333], 'precision': [0.8692971895698911, 0.9960119284294234, 0.9970349308979459, 0.9990041326230001, 0.999333998669328], 'recall': [0.903, 0.996, 0.997, 0.999, 0.9993333333333333], 'f1_score': [0.8835174081968319, 0.9960035472792642, 0.9970086947102732, 0.9990004533689507, 0.9993333956016881], 'confusion_matrix': [array([[   0,  100,    0,    0],
       [   0,  312,  188,    0],
       [   0,    0, 1600,    0],
       [   0,    1,    2,  797]]), array([[ 100,    0,    0,    0],
       [   0,  497,    3,    0],
       [   0,    6, 1594,    0],
       [   0,    0,    3,  797]]), array([[ 100,    0,    0,    0],
       [   3,  497,    0,    0],
       [   0,    5, 1595,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   1,  499,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    2,  798]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    1, 1599,    0],
       [   0,    0,    1,  799]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.001, 'dropout_rate': 0.5, 'optimizer': 'Adam', 'train_losses': [0.11938162871554014, 0.016611227686119348, 0.01610732615074791, 0.011371466028653425, 0.005539167248595427], 'val_metrics': {'accuracy': [0.9973333333333333, 1.0, 0.9976666666666667, 1.0, 0.9996666666666667], 'precision': [0.9973642942757894, 1.0, 0.997698882314267, 1.0, 0.9996670828131502], 'recall': [0.9973333333333333, 1.0, 0.9976666666666667, 1.0, 0.9996666666666667], 'f1_score': [0.9973388343026012, 1.0, 0.9976727938100108, 1.0, 0.9996667186686553], 'confusion_matrix': [array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    7, 1593,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    0,  800]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    6, 1594,    0],
       [   0,    1,    0,  799]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    0,  800]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1599,    1],
       [   0,    0,    0,  800]])], 'mae': [], 'mse': [], 'r2': []}}]