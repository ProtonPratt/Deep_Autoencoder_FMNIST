Train: 12600 images, 12600 labels
Test: 4600 images, 4600
Val: 3000 images, 3000
Batch of images: torch.Size([32, 1, 128, 128])
Batch of labels: tensor([3, 2, 2, 2, 2, 3, 2, 3, 1, 2, 3, 3, 3, 3, 2, 2, 1, 1, 3, 3, 2, 2, 2, 2,
        1, 2, 2, 3, 3, 2, 2, 3])

Train: 12600 images, 12600 labels
Val: 3000 images, 3000 labels
Test: 4600 images, 4600 labels
True
Using device: cuda
model number {'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD'}
Epoch 1/5, Training Loss: 1.260920075141839
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 2/5, Training Loss: 1.1243164687592366
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 3/5, Training Loss: 1.0973070862934675
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 4/5, Training Loss: 1.0518735591227633
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 5/5, Training Loss: 0.9450482152742783
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
model number {'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [1.260920075141839, 1.1243164687592366, 1.0973070862934675, 1.0518735591227633, 0.9450482152742783], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.5526362823949955, 0.6329057915228292], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3827669985969955, 0.6878948998303075], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  784,   16]]), array([[   0,    0,  100,    0],
       [   0,    0,  467,   33],
       [   0,    0, 1600,    0],
       [   0,    0,   90,  710]])], 'mae': [], 'mse': [], 'r2': []}}]
model number {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam'}
Epoch 1/5, Training Loss: 0.2647675488427296
Epoch 2/5, Training Loss: 0.03855851659099018
Epoch 3/5, Training Loss: 0.013737305390082851
Epoch 4/5, Training Loss: 0.28994978916566716
Epoch 5/5, Training Loss: 0.039914158245820834
model number {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [1.260920075141839, 1.1243164687592366, 1.0973070862934675, 1.0518735591227633, 0.9450482152742783], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.5526362823949955, 0.6329057915228292], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3827669985969955, 0.6878948998303075], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  784,   16]]), array([[   0,    0,  100,    0],
       [   0,    0,  467,   33],
       [   0,    0, 1600,    0],
       [   0,    0,   90,  710]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam', 'train_losses': [0.2647675488427296, 0.03855851659099018, 0.013737305390082851, 0.28994978916566716, 0.039914158245820834], 'val_metrics': {'accuracy': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'precision': [0.989087295651967, 0.9917948717948718, 0.9983385254413291, 0.999666874869873, 0.9986692034936159], 'recall': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'f1_score': [0.9889923861804638, 0.9916553154019455, 0.998332021055137, 0.9996666145019174, 0.9986656306340156], 'confusion_matrix': [array([[ 100,    0,    0,    0],
       [   0,  486,   11,    3],
       [   0,    3, 1582,   15],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  487,   13,    0],
       [   0,    0, 1600,    0],
       [   0,    0,   12,  788]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    5,  795]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    1,    3,  796]])], 'mae': [], 'mse': [], 'r2': []}}]
model number {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop'}
Epoch 1/5, Training Loss: 885981.4918573401
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 2/5, Training Loss: 1.1449906331330992
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 3/5, Training Loss: 1.1449039598104311
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 4/5, Training Loss: 1.1450834251599868
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 5/5, Training Loss: 1.1448121217604217
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
model number {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [1.260920075141839, 1.1243164687592366, 1.0973070862934675, 1.0518735591227633, 0.9450482152742783], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.5526362823949955, 0.6329057915228292], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3827669985969955, 0.6878948998303075], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  784,   16]]), array([[   0,    0,  100,    0],
       [   0,    0,  467,   33],
       [   0,    0, 1600,    0],
       [   0,    0,   90,  710]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam', 'train_losses': [0.2647675488427296, 0.03855851659099018, 0.013737305390082851, 0.28994978916566716, 0.039914158245820834], 'val_metrics': {'accuracy': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'precision': [0.989087295651967, 0.9917948717948718, 0.9983385254413291, 0.999666874869873, 0.9986692034936159], 'recall': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'f1_score': [0.9889923861804638, 0.9916553154019455, 0.998332021055137, 0.9996666145019174, 0.9986656306340156], 'confusion_matrix': [array([[ 100,    0,    0,    0],
       [   0,  486,   11,    3],
       [   0,    3, 1582,   15],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  487,   13,    0],
       [   0,    0, 1600,    0],
       [   0,    0,   12,  788]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    5,  795]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    1,    3,  796]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop', 'train_losses': [885981.4918573401, 1.1449906331330992, 1.1449039598104311, 1.1450834251599868, 1.1448121217604217], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.28444444444444444], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3710144927536232], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]])], 'mae': [], 'mse': [], 'r2': []}}]
model number {'learning_rate': 0.01, 'dropout_rate': 0.0, 'optimizer': 'SGD'}
Epoch 1/5, Training Loss: 0.8006785432926289
/home/pratyush/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Epoch 2/5, Training Loss: 0.19032221345164752
Epoch 3/5, Training Loss: 0.04044499913783659
Epoch 4/5, Training Loss: 0.009220411894939896
Epoch 5/5, Training Loss: 0.003576287777555473
model number {'learning_rate': 0.01, 'dropout_rate': 0.0, 'optimizer': 'SGD'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [1.260920075141839, 1.1243164687592366, 1.0973070862934675, 1.0518735591227633, 0.9450482152742783], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.5526362823949955, 0.6329057915228292], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3827669985969955, 0.6878948998303075], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  784,   16]]), array([[   0,    0,  100,    0],
       [   0,    0,  467,   33],
       [   0,    0, 1600,    0],
       [   0,    0,   90,  710]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam', 'train_losses': [0.2647675488427296, 0.03855851659099018, 0.013737305390082851, 0.28994978916566716, 0.039914158245820834], 'val_metrics': {'accuracy': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'precision': [0.989087295651967, 0.9917948717948718, 0.9983385254413291, 0.999666874869873, 0.9986692034936159], 'recall': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'f1_score': [0.9889923861804638, 0.9916553154019455, 0.998332021055137, 0.9996666145019174, 0.9986656306340156], 'confusion_matrix': [array([[ 100,    0,    0,    0],
       [   0,  486,   11,    3],
       [   0,    3, 1582,   15],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  487,   13,    0],
       [   0,    0, 1600,    0],
       [   0,    0,   12,  788]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    5,  795]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    1,    3,  796]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop', 'train_losses': [885981.4918573401, 1.1449906331330992, 1.1449039598104311, 1.1450834251599868, 1.1448121217604217], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.28444444444444444], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3710144927536232], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.01, 'dropout_rate': 0.0, 'optimizer': 'SGD', 'train_losses': [0.8006785432926289, 0.19032221345164752, 0.04044499913783659, 0.009220411894939896, 0.003576287777555473], 'val_metrics': {'accuracy': [0.903, 0.996, 0.997, 0.999, 0.9993333333333333], 'precision': [0.8692971895698911, 0.9960119284294234, 0.9970349308979459, 0.9990041326230001, 0.999333998669328], 'recall': [0.903, 0.996, 0.997, 0.999, 0.9993333333333333], 'f1_score': [0.8835174081968319, 0.9960035472792642, 0.9970086947102732, 0.9990004533689507, 0.9993333956016881], 'confusion_matrix': [array([[   0,  100,    0,    0],
       [   0,  312,  188,    0],
       [   0,    0, 1600,    0],
       [   0,    1,    2,  797]]), array([[ 100,    0,    0,    0],
       [   0,  497,    3,    0],
       [   0,    6, 1594,    0],
       [   0,    0,    3,  797]]), array([[ 100,    0,    0,    0],
       [   3,  497,    0,    0],
       [   0,    5, 1595,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   1,  499,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    2,  798]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    1, 1599,    0],
       [   0,    0,    1,  799]])], 'mae': [], 'mse': [], 'r2': []}}]
model number {'learning_rate': 0.001, 'dropout_rate': 0.5, 'optimizer': 'Adam'}
Epoch 1/5, Training Loss: 0.11938162871554014
Epoch 2/5, Training Loss: 0.016611227686119348
Epoch 3/5, Training Loss: 0.01610732615074791
Epoch 4/5, Training Loss: 0.011371466028653425
Epoch 5/5, Training Loss: 0.005539167248595427
model number {'learning_rate': 0.001, 'dropout_rate': 0.5, 'optimizer': 'Adam'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [1.260920075141839, 1.1243164687592366, 1.0973070862934675, 1.0518735591227633, 0.9450482152742783], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.5526362823949955, 0.6329057915228292], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5386666666666666, 0.77], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3827669985969955, 0.6878948998303075], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  784,   16]]), array([[   0,    0,  100,    0],
       [   0,    0,  467,   33],
       [   0,    0, 1600,    0],
       [   0,    0,   90,  710]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam', 'train_losses': [0.2647675488427296, 0.03855851659099018, 0.013737305390082851, 0.28994978916566716, 0.039914158245820834], 'val_metrics': {'accuracy': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'precision': [0.989087295651967, 0.9917948717948718, 0.9983385254413291, 0.999666874869873, 0.9986692034936159], 'recall': [0.989, 0.9916666666666667, 0.9983333333333333, 0.9996666666666667, 0.9986666666666667], 'f1_score': [0.9889923861804638, 0.9916553154019455, 0.998332021055137, 0.9996666145019174, 0.9986656306340156], 'confusion_matrix': [array([[ 100,    0,    0,    0],
       [   0,  486,   11,    3],
       [   0,    3, 1582,   15],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  487,   13,    0],
       [   0,    0, 1600,    0],
       [   0,    0,   12,  788]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    5,  795]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    1,    3,  796]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop', 'train_losses': [885981.4918573401, 1.1449906331330992, 1.1449039598104311, 1.1450834251599868, 1.1448121217604217], 'val_metrics': {'accuracy': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 'precision': [0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.28444444444444444, 0.28444444444444444], 'recall': [0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 'f1_score': [0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3710144927536232, 0.3710144927536232], 'confusion_matrix': [array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]]), array([[   0,    0,  100,    0],
       [   0,    0,  500,    0],
       [   0,    0, 1600,    0],
       [   0,    0,  800,    0]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.01, 'dropout_rate': 0.0, 'optimizer': 'SGD', 'train_losses': [0.8006785432926289, 0.19032221345164752, 0.04044499913783659, 0.009220411894939896, 0.003576287777555473], 'val_metrics': {'accuracy': [0.903, 0.996, 0.997, 0.999, 0.9993333333333333], 'precision': [0.8692971895698911, 0.9960119284294234, 0.9970349308979459, 0.9990041326230001, 0.999333998669328], 'recall': [0.903, 0.996, 0.997, 0.999, 0.9993333333333333], 'f1_score': [0.8835174081968319, 0.9960035472792642, 0.9970086947102732, 0.9990004533689507, 0.9993333956016881], 'confusion_matrix': [array([[   0,  100,    0,    0],
       [   0,  312,  188,    0],
       [   0,    0, 1600,    0],
       [   0,    1,    2,  797]]), array([[ 100,    0,    0,    0],
       [   0,  497,    3,    0],
       [   0,    6, 1594,    0],
       [   0,    0,    3,  797]]), array([[ 100,    0,    0,    0],
       [   3,  497,    0,    0],
       [   0,    5, 1595,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   1,  499,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    2,  798]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    1, 1599,    0],
       [   0,    0,    1,  799]])], 'mae': [], 'mse': [], 'r2': []}}, {'learning_rate': 0.001, 'dropout_rate': 0.5, 'optimizer': 'Adam', 'train_losses': [0.11938162871554014, 0.016611227686119348, 0.01610732615074791, 0.011371466028653425, 0.005539167248595427], 'val_metrics': {'accuracy': [0.9973333333333333, 1.0, 0.9976666666666667, 1.0, 0.9996666666666667], 'precision': [0.9973642942757894, 1.0, 0.997698882314267, 1.0, 0.9996670828131502], 'recall': [0.9973333333333333, 1.0, 0.9976666666666667, 1.0, 0.9996666666666667], 'f1_score': [0.9973388343026012, 1.0, 0.9976727938100108, 1.0, 0.9996667186686553], 'confusion_matrix': [array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    7, 1593,    0],
       [   0,    0,    1,  799]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    0,  800]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    6, 1594,    0],
       [   0,    1,    0,  799]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1600,    0],
       [   0,    0,    0,  800]]), array([[ 100,    0,    0,    0],
       [   0,  500,    0,    0],
       [   0,    0, 1599,    1],
       [   0,    0,    0,  800]])], 'mae': [], 'mse': [], 'r2': []}}]





Epoch 1/5, Training Loss: 0.48808837954672485
Epoch 2/5, Training Loss: 0.027316784998875385
Epoch 3/5, Training Loss: 0.012072086167063279
Epoch 4/5, Training Loss: 0.025676478931735268
Epoch 5/5, Training Loss: 0.030733060461258874
Results from model
Accuracy: 0.9984782608695653
Precision: 0.9984835683802343
Recall: 0.9984782608695653
F1 Score: 0.9984769176683447
Confusion Matrix:
[[ 100    0    0    0]
 [   0 1500    0    0]
 [   0    0 2000    0]
 [   0    0    7  993]]
Results from model
Accuracy: 0.9992391304347826
Precision: 0.9992404596304293
Recall: 0.9992391304347826
F1 Score: 0.9992387960962079
Confusion Matrix:
[[ 200    0    0    0]
 [   0 3000    0    0]
 [   0    0 4000    0]
 [   0    0    7 1993]]
Using device: cuda
model number {'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD'}
Epoch 1/5, Training Loss: 0.7359033922480448
Epoch 2/5, Training Loss: 0.36467480046797524
Epoch 3/5, Training Loss: 0.18006399321147634
Epoch 4/5, Training Loss: 0.11104756963396738
Epoch 5/5, Training Loss: 0.08957996203795757
model number {'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [0.7359033922480448, 0.40342750740881533, 0.36467480046797524, 0.20949155611402176, 0.18006399321147634, 0.09765269543896331, 0.11104756963396738, 0.0689517866691297, 0.08957996203795757, 0.06502041892406155], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [0.44252753, 0.36137304, 0.24591194, 0.20347323, 0.19888222], 'mse': [0.40283066, 0.2091016, 0.09756205, 0.06888838, 0.064928494], 'r2': [0.28772570803409225, 0.630272218202407, 0.8274934343492912, 0.8781934325544313, 0.8851951973497285]}}]
model number {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam'}
Epoch 1/5, Training Loss: 61.84655847643422
Epoch 2/5, Training Loss: 0.12128961263082656
Epoch 3/5, Training Loss: 0.09847014323633334
Epoch 4/5, Training Loss: 0.10061881907738102
Epoch 5/5, Training Loss: 0.098513990593365
model number {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [0.7359033922480448, 0.40342750740881533, 0.36467480046797524, 0.20949155611402176, 0.18006399321147634, 0.09765269543896331, 0.11104756963396738, 0.0689517866691297, 0.08957996203795757, 0.06502041892406155], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [0.44252753, 0.36137304, 0.24591194, 0.20347323, 0.19888222], 'mse': [0.40283066, 0.2091016, 0.09756205, 0.06888838, 0.064928494], 'r2': [0.28772570803409225, 0.630272218202407, 0.8274934343492912, 0.8781934325544313, 0.8851951973497285]}}, {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam', 'train_losses': [61.84655847643422, 0.03740870639523293, 0.12128961263082656, 0.04982604649155698, 0.09847014323633334, 0.021769923093590014, 0.10061881907738102, 0.02312948659775739, 0.098513990593365, 0.030676627561370743], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [0.15217936, 0.18065764, 0.11617881, 0.120492205, 0.13701548], 'mse': [0.037326094, 0.049648788, 0.021750743, 0.023131272, 0.030603295], 'r2': [0.9340010108930641, 0.9122123596729803, 0.9615409241410612, 0.9590999121916013, 0.9458880835516639]}}]
model number {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop'}
Epoch 1/5, Training Loss: 142067194968871.0
Epoch 2/5, Training Loss: 4.516312394650455
Epoch 3/5, Training Loss: 4.515995135767206
Epoch 4/5, Training Loss: 4.515598562163145
Epoch 5/5, Training Loss: 4.5157043147208125
model number {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [0.7359033922480448, 0.40342750740881533, 0.36467480046797524, 0.20949155611402176, 0.18006399321147634, 0.09765269543896331, 0.11104756963396738, 0.0689517866691297, 0.08957996203795757, 0.06502041892406155], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [0.44252753, 0.36137304, 0.24591194, 0.20347323, 0.19888222], 'mse': [0.40283066, 0.2091016, 0.09756205, 0.06888838, 0.064928494], 'r2': [0.28772570803409225, 0.630272218202407, 0.8274934343492912, 0.8781934325544313, 0.8851951973497285]}}, {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam', 'train_losses': [61.84655847643422, 0.03740870639523293, 0.12128961263082656, 0.04982604649155698, 0.09847014323633334, 0.021769923093590014, 0.10061881907738102, 0.02312948659775739, 0.098513990593365, 0.030676627561370743], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [0.15217936, 0.18065764, 0.11617881, 0.120492205, 0.13701548], 'mse': [0.037326094, 0.049648788, 0.021750743, 0.023131272, 0.030603295], 'r2': [0.9340010108930641, 0.9122123596729803, 0.9615409241410612, 0.9590999121916013, 0.9458880835516639]}}, {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop', 'train_losses': [142067194968871.0, 4.711436170212766, 4.516312394650455, 4.711436170212766, 4.515995135767206, 4.711436170212766, 4.515598562163145, 4.711436170212766, 4.5157043147208125, 4.711436170212766], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [2.0333333, 2.0333333, 2.0333333, 2.0333333, 2.0333333], 'mse': [4.7, 4.7, 4.7, 4.7, 4.7], 'r2': [-7.3104125736738705, -7.3104125736738705, -7.3104125736738705, -7.3104125736738705, -7.3104125736738705]}}]
model number {'learning_rate': 0.01, 'dropout_rate': 0.0, 'optimizer': 'SGD'}
Epoch 1/5, Training Loss: 0.3062018216280314
Epoch 2/5, Training Loss: 0.06571723248450284
Epoch 3/5, Training Loss: 0.0475420873437247
Epoch 4/5, Training Loss: 0.03680731583065188
Epoch 5/5, Training Loss: 0.02721616453467514
model number {'learning_rate': 0.01, 'dropout_rate': 0.0, 'optimizer': 'SGD'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [0.7359033922480448, 0.40342750740881533, 0.36467480046797524, 0.20949155611402176, 0.18006399321147634, 0.09765269543896331, 0.11104756963396738, 0.0689517866691297, 0.08957996203795757, 0.06502041892406155], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [0.44252753, 0.36137304, 0.24591194, 0.20347323, 0.19888222], 'mse': [0.40283066, 0.2091016, 0.09756205, 0.06888838, 0.064928494], 'r2': [0.28772570803409225, 0.630272218202407, 0.8274934343492912, 0.8781934325544313, 0.8851951973497285]}}, {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam', 'train_losses': [61.84655847643422, 0.03740870639523293, 0.12128961263082656, 0.04982604649155698, 0.09847014323633334, 0.021769923093590014, 0.10061881907738102, 0.02312948659775739, 0.098513990593365, 0.030676627561370743], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [0.15217936, 0.18065764, 0.11617881, 0.120492205, 0.13701548], 'mse': [0.037326094, 0.049648788, 0.021750743, 0.023131272, 0.030603295], 'r2': [0.9340010108930641, 0.9122123596729803, 0.9615409241410612, 0.9590999121916013, 0.9458880835516639]}}, {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop', 'train_losses': [142067194968871.0, 4.711436170212766, 4.516312394650455, 4.711436170212766, 4.515995135767206, 4.711436170212766, 4.515598562163145, 4.711436170212766, 4.5157043147208125, 4.711436170212766], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [2.0333333, 2.0333333, 2.0333333, 2.0333333, 2.0333333], 'mse': [4.7, 4.7, 4.7, 4.7, 4.7], 'r2': [-7.3104125736738705, -7.3104125736738705, -7.3104125736738705, -7.3104125736738705, -7.3104125736738705]}}, {'learning_rate': 0.01, 'dropout_rate': 0.0, 'optimizer': 'SGD', 'train_losses': [0.3062018216280314, 0.06061183680047063, 0.06571723248450284, 0.04750213219209554, 0.0475420873437247, 0.03573329278089581, 0.03680731583065188, 0.03164291745448049, 0.02721616453467514, 0.027630899586972405], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [0.19227283, 0.17254935, 0.14968893, 0.14292108, 0.12991816], 'mse': [0.060551483, 0.04742192, 0.035681177, 0.031641766, 0.027567225], 'r2': [0.8929345111750738, 0.916149842958627, 0.9369095074856598, 0.9440518865658833, 0.9512563827927808]}}]
model number {'learning_rate': 0.001, 'dropout_rate': 0.5, 'optimizer': 'Adam'}
Epoch 1/5, Training Loss: 4.516048012651162
Epoch 2/5, Training Loss: 4.515307741116751
Epoch 3/5, Training Loss: 4.5160215736040605
Epoch 4/5, Training Loss: 4.515572124326289
Epoch 5/5, Training Loss: 4.51533417955873
model number {'learning_rate': 0.001, 'dropout_rate': 0.5, 'optimizer': 'Adam'} done
results [{'learning_rate': 0.001, 'dropout_rate': 0.1, 'optimizer': 'SGD', 'train_losses': [0.7359033922480448, 0.40342750740881533, 0.36467480046797524, 0.20949155611402176, 0.18006399321147634, 0.09765269543896331, 0.11104756963396738, 0.0689517866691297, 0.08957996203795757, 0.06502041892406155], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [0.44252753, 0.36137304, 0.24591194, 0.20347323, 0.19888222], 'mse': [0.40283066, 0.2091016, 0.09756205, 0.06888838, 0.064928494], 'r2': [0.28772570803409225, 0.630272218202407, 0.8274934343492912, 0.8781934325544313, 0.8851951973497285]}}, {'learning_rate': 0.01, 'dropout_rate': 0.3, 'optimizer': 'Adam', 'train_losses': [61.84655847643422, 0.03740870639523293, 0.12128961263082656, 0.04982604649155698, 0.09847014323633334, 0.021769923093590014, 0.10061881907738102, 0.02312948659775739, 0.098513990593365, 0.030676627561370743], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [0.15217936, 0.18065764, 0.11617881, 0.120492205, 0.13701548], 'mse': [0.037326094, 0.049648788, 0.021750743, 0.023131272, 0.030603295], 'r2': [0.9340010108930641, 0.9122123596729803, 0.9615409241410612, 0.9590999121916013, 0.9458880835516639]}}, {'learning_rate': 0.05, 'dropout_rate': 0.5, 'optimizer': 'RMSprop', 'train_losses': [142067194968871.0, 4.711436170212766, 4.516312394650455, 4.711436170212766, 4.515995135767206, 4.711436170212766, 4.515598562163145, 4.711436170212766, 4.5157043147208125, 4.711436170212766], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [2.0333333, 2.0333333, 2.0333333, 2.0333333, 2.0333333], 'mse': [4.7, 4.7, 4.7, 4.7, 4.7], 'r2': [-7.3104125736738705, -7.3104125736738705, -7.3104125736738705, -7.3104125736738705, -7.3104125736738705]}}, {'learning_rate': 0.01, 'dropout_rate': 0.0, 'optimizer': 'SGD', 'train_losses': [0.3062018216280314, 0.06061183680047063, 0.06571723248450284, 0.04750213219209554, 0.0475420873437247, 0.03573329278089581, 0.03680731583065188, 0.03164291745448049, 0.02721616453467514, 0.027630899586972405], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [0.19227283, 0.17254935, 0.14968893, 0.14292108, 0.12991816], 'mse': [0.060551483, 0.04742192, 0.035681177, 0.031641766, 0.027567225], 'r2': [0.8929345111750738, 0.916149842958627, 0.9369095074856598, 0.9440518865658833, 0.9512563827927808]}}, {'learning_rate': 0.001, 'dropout_rate': 0.5, 'optimizer': 'Adam', 'train_losses': [4.516048012651162, 4.711436170212766, 4.515307741116751, 4.711436170212766, 4.5160215736040605, 4.711436170212766, 4.515572124326289, 4.711436170212766, 4.51533417955873, 4.711436170212766], 'val_metrics': {'accuracy': [], 'precision': [], 'recall': [], 'f1_score': [], 'confusion_matrix': [], 'mae': [2.0333333, 2.0333333, 2.0333333, 2.0333333, 2.0333333], 'mse': [4.7, 4.7, 4.7, 4.7, 4.7], 'r2': [-7.3104125736738705, -7.3104125736738705, -7.3104125736738705, -7.3104125736738705, -7.3104125736738705]}}]